@model GG.CadastroClientesDDD.Application.ViewModels.CustomerViewModel

@{
    ViewBag.Title = "Novo cliente";
}

<h2>Cadastrar novo cliente</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Dados do cliente</h4>
        <hr />


        @if (ViewData.ModelState[""] != null && ViewData.ModelState[""].Errors.Any())
        {
            <div class="alert alert-danger">
                <button type="button" class="close" data-dismiss="alert">×</button>
                <h3>Opa! Alguma coisa não deu certo:</h3>
                @Html.ValidationSummary(true)
            </div>
        }

        @if (!string.IsNullOrEmpty(ViewBag.Sucesso))
        {
            <div class="alert alert-success">
                <button type="button" class="close" data-dismiss="alert">×</button>
                <h3>@ViewBag.Sucesso</h3>
            </div>
        }

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CPF, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Adicionar" class="btn btn-success" />
                @Html.ActionLink("Voltar", "Index", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}
